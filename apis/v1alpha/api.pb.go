// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1alpha/api.proto

package v1alpha

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b27c0d65a956ad, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type CPURequest struct {
	Pid                  string   `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPURequest) Reset()         { *m = CPURequest{} }
func (m *CPURequest) String() string { return proto.CompactTextString(m) }
func (*CPURequest) ProtoMessage()    {}
func (*CPURequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b27c0d65a956ad, []int{1}
}

func (m *CPURequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPURequest.Unmarshal(m, b)
}
func (m *CPURequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPURequest.Marshal(b, m, deterministic)
}
func (m *CPURequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPURequest.Merge(m, src)
}
func (m *CPURequest) XXX_Size() int {
	return xxx_messageInfo_CPURequest.Size(m)
}
func (m *CPURequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CPURequest.DiscardUnknown(m)
}

var xxx_messageInfo_CPURequest proto.InternalMessageInfo

func (m *CPURequest) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

type CPUResponse struct {
	Cpuset               string   `protobuf:"bytes,1,opt,name=cpuset,proto3" json:"cpuset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPUResponse) Reset()         { *m = CPUResponse{} }
func (m *CPUResponse) String() string { return proto.CompactTextString(m) }
func (*CPUResponse) ProtoMessage()    {}
func (*CPUResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4b27c0d65a956ad, []int{2}
}

func (m *CPUResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUResponse.Unmarshal(m, b)
}
func (m *CPUResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUResponse.Marshal(b, m, deterministic)
}
func (m *CPUResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUResponse.Merge(m, src)
}
func (m *CPUResponse) XXX_Size() int {
	return xxx_messageInfo_CPUResponse.Size(m)
}
func (m *CPUResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CPUResponse proto.InternalMessageInfo

func (m *CPUResponse) GetCpuset() string {
	if m != nil {
		return m.Cpuset
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "v1alpha.Empty")
	proto.RegisterType((*CPURequest)(nil), "v1alpha.CPURequest")
	proto.RegisterType((*CPUResponse)(nil), "v1alpha.CPUResponse")
}

func init() { proto.RegisterFile("v1alpha/api.proto", fileDescriptor_f4b27c0d65a956ad) }

var fileDescriptor_f4b27c0d65a956ad = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x33, 0x4c, 0xcc,
	0x29, 0xc8, 0x48, 0xd4, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87,
	0x0a, 0x29, 0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x2a, 0xc9, 0x71, 0x71, 0x39, 0x07,
	0x84, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x70, 0x31, 0x17, 0x64, 0xa6, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x4a, 0xaa, 0x5c, 0xdc, 0x60, 0xf9, 0xe2, 0x82,
	0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xe4, 0x82, 0xd2, 0xe2, 0xd4, 0x12, 0xa8, 0x1a,
	0x28, 0xcf, 0xc8, 0x85, 0x8b, 0xdd, 0x2f, 0xb5, 0x24, 0xb4, 0x24, 0x33, 0x47, 0xc8, 0x92, 0x8b,
	0xcb, 0x3d, 0xb5, 0xc4, 0x39, 0x20, 0xd4, 0x33, 0x2f, 0x2d, 0x5f, 0x48, 0x58, 0x0f, 0x6a, 0xa5,
	0x1e, 0xc2, 0x1a, 0x29, 0x11, 0x54, 0x41, 0x88, 0xd9, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x57, 0x1a,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xec, 0xc2, 0xe1, 0xba, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetUtilClient is the client API for NetUtil service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetUtilClient interface {
	GetCPUInfo(ctx context.Context, in *CPURequest, opts ...grpc.CallOption) (*CPUResponse, error)
}

type netUtilClient struct {
	cc *grpc.ClientConn
}

func NewNetUtilClient(cc *grpc.ClientConn) NetUtilClient {
	return &netUtilClient{cc}
}

func (c *netUtilClient) GetCPUInfo(ctx context.Context, in *CPURequest, opts ...grpc.CallOption) (*CPUResponse, error) {
	out := new(CPUResponse)
	err := c.cc.Invoke(ctx, "/v1alpha.NetUtil/GetCPUInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetUtilServer is the server API for NetUtil service.
type NetUtilServer interface {
	GetCPUInfo(context.Context, *CPURequest) (*CPUResponse, error)
}

func RegisterNetUtilServer(s *grpc.Server, srv NetUtilServer) {
	s.RegisterService(&_NetUtil_serviceDesc, srv)
}

func _NetUtil_GetCPUInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CPURequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetUtilServer).GetCPUInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha.NetUtil/GetCPUInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetUtilServer).GetCPUInfo(ctx, req.(*CPURequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetUtil_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1alpha.NetUtil",
	HandlerType: (*NetUtilServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCPUInfo",
			Handler:    _NetUtil_GetCPUInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1alpha/api.proto",
}
